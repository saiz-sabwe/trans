{% extends 'base.html.twig' %}

{% block title %}Register{% endblock %}

{% set sidebar_visible = false %}

{% block body %}
    <main class="main" id="top">
        <div class="container" data-layout="container">
            <div class="row justify-content-center min-vh-25 py-3">
                <div class="col-sm-11 col-md-9 col-lg-7 col-xl-6 col-xxl-5">
                    <a class="d-flex justify-content-center mb-4" href="{{ path("app_base_home") }}">
                        <img class="me-0" src="{{ asset('/img/makutatrans_blue_old.png') }}" alt="" width="150"/>
                    </a>
                    <div class="card">
                        <div class="card-body p-4 p-sm-5">
                            <div class="p-4 p-md-5 flex-grow-1">
                                <div class="row d-flex justify-content-between mb-2">
                                    <div class="col-auto">
                                        <h5>Créer un compte</h5>
                                    </div>
                                    <div class="col-auto fs-10 text-600">
                                        <span>ou</span> <a href="{{ path('app_login') }}">Se connecter</a>
                                    </div>
                                </div>

                                {% for flash_error in app.flashes('verify_email_error') %}
                                    <div class="alert alert-danger" role="alert">{{ flash_error }}</div>
                                {% endfor %}

                                {{ form_start(registrationForm, {'attr': {'class': 'needs-validation'}}) }}
                                <div class="text-danger">
                                    {{ form_errors(registrationForm) }}
                                </div>
                                <div class="mb-3">
                                    {{ form_row(registrationForm.pseudo, {'attr': {'class': 'form-control'}}) }}
                                </div>
                                <div class="mb-3">
                                    {{ form_row(registrationForm.username, {
                                        'label':'Compte utilisateur',
                                        'attr': {'class': 'form-control', 'id': 'username'}
                                    }) }}
                                </div>
                                <div class="mb-3">
                                    {{ form_row(registrationForm.plainPassword, { 'label': 'Mot de passe', 'attr': {'class': 'form-control'} }) }}
                                </div>

                                <div class="form-check mb-3">
                                    {{ form_widget(registrationForm.agreeTerms, { 'attr': { 'class': 'form-check-input', 'id': 'card-register-checkbox' } }) }}
                                    <label class="form-label" for="card-register-checkbox">
                                        J'accepte les <a href="#">conditions</a> et la <a class="white-space-nowrap" href="#">politique de confidentialité</a>
                                    </label>
                                </div>

                                <div class="mb-3">
                                    <button type="submit" class="btn btn-primary d-block w-100 mt-3">S'inscrire</button>
                                </div>
                                {{ form_end(registrationForm) }}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <script>
        // Initialisation de intl-tel-input sur le champ de numéro de téléphone
        const phoneInput = document.querySelector("#registration_form_username");
        const iti = window.intlTelInput(phoneInput, {
            initialCountry: "cd",  // Pays par défaut
            preferredCountries: ["cd", "fr", "us", "gb"],
            utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js"
        });

        // Met à jour le champ avec le numéro complet, y compris l'indicatif de pays
        function updatePhoneNumber() {
            // Obtenez le numéro complet au format E.164
            const fullNumber = iti.getNumber();
            // Vérifiez si le premier caractère est un '+' et supprimez-le
            phoneInput.value = fullNumber.substring(1);
        }

        // Écoute l'événement de changement de pays et de saisie de numéro
        phoneInput.addEventListener("countrychange", updatePhoneNumber);
        phoneInput.addEventListener("blur", updatePhoneNumber);
    </script>

{% endblock %}
