{% extends 'base.html.twig' %}

{% block title %}Nouvel Abonnement {{ parent() }}{% endblock %}

{% block body %}

    <div class="container d-flex flex-column justify-content-center align-items-center vh-100">

        <div>
            {% for message in app.flashes('danger_message') %}
                <div class="alert alert-danger flash-message" role="alert">
                    {{ message }}
                </div>
            {% endfor %}
        </div>

        <div class="card p-4 shadow" style="max-width: 450px; width: 100%;">
            <div class="text-center mb-4">
                <h4 class="fw-bold">Nouvel Abonnement</h4>
                <p class="text-muted">Gagnez du temps, économisez et assurez-vous une place en toute tranquillité !</p>
            </div>

            {{ form_start(form) }}
            <div class="mb-3">
                {{ form_label(form.totalDay, null, {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(form.totalDay, {'attr': {'class': 'form-control'}}) }}
                {{ form_errors(form.totalDay) }}
            </div>
            <div class="mb-3">
                {{ form_label(form.registration, null, {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(form.registration, {'attr': {'class': 'form-control'}}) }}
                {{ form_errors(form.registration) }}
            </div>
            <div class="mb-3">
                {{ form_label(form.payerOperator, null, {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(form.payerOperator, {'attr': {'class': 'form-select'}}) }}
                {{ form_errors(form.payerOperator) }}
            </div>
            <div class="mb-3">
                {{ form_widget(form.isDefaultAmount, {'attr': {'class': 'form-control'}}) }}
                {{ form_errors(form.isDefaultAmount) }}
            </div>
            <div class="mb-3">
                {{ form_label(form.payerCurrency, null, {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(form.payerCurrency, {'attr': {'class': 'form-select'}}) }}
                {{ form_errors(form.payerCurrency) }}
            </div>

{#            <div class="mb-3" style=" width: 100%; height: calc(2.25rem + 2px);">#}
            <div class="mb-3">
                {{ form_label(form.payerAccountNumber, 'No. Téléphone', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(form.payerAccountNumber, {'attr': {'class': 'form-control', 'maxlength': 15, 'placeholder': 'No. Téléphone'}}) }}
                {{ form_errors(form.payerAccountNumber) }}
            </div>

            <div class="mb-3">
                {{ form_widget(form.countryCode, {'attr': {'class': 'form-control'}}) }}
                {{ form_errors(form.countryCode) }}
            </div>
            <div class="d-grid mt-4">
                {{ form_widget(form.submit, {'attr': {'class': 'btn btn-danger'}}) }}
            </div>
            {{ form_row(form._token) }}
            {{ form_end(form, {'render_rest':false}) }}
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const phoneInput = document.querySelector("#subscription_form_payerAccountNumber");

            // Initialisation d'intl-tel-input
            const iti = window.intlTelInput(phoneInput, {
                initialCountry: "cd", // Pays par défaut
                preferredCountries: ["cd", "fr", "us", "gb"],
                utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js"
            });

            // Ajouter les classes Bootstrap au conteneur
            // const itiContainer = phoneInput.closest('.iti'); // Récupérer le conteneur généré par intl-tel-input
            // if (itiContainer) {
            //    itiContainer.classList.add('form-control'); // Ajouter la classe Bootstrap
            // }

            // Mettre à jour la valeur du champ avec le numéro formaté
            function updatePhoneNumber() {
                phoneInput.value = iti.getNumber().substring(1);
            }

            phoneInput.addEventListener("countrychange", updatePhoneNumber);
            phoneInput.addEventListener("blur", updatePhoneNumber);
        });

    </script>

{#    <script>#}
{#        const phoneInput = document.querySelector("#subscription_form_payerAccountNumber");#}
{#        const iti = window.intlTelInput(phoneInput, {#}
{#            initialCountry: "cd",  // Pays par défaut#}
{#            preferredCountries: ["cd", "fr", "us", "gb"],#}
{#            utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js"#}
{#        });#}

{#        function updatePhoneNumber() {#}
{#            phoneInput.value = iti.getNumber().substring(1);#}
{#        }#}

{#        phoneInput.addEventListener("countrychange", updatePhoneNumber);#}
{#        phoneInput.addEventListener("blur", updatePhoneNumber);#}
{#    </script>#}

{% endblock %}